### Linear regression
lin:
    notes:
        - insensitive to scaling or PCA
    class: LinearRegression
    longname: Linear regression

### Polynomial regression
poly2:
    notes:
        - Only a slight improvement over linear regression?
            - because non-linearities are localised?
    class: LinearRegression
    transforms:
        poly:
            degree: 2

poly5:
    notes:
        - Only a slight improvement over linear regression?
            - because non-linearities are localised?
    class: LinearRegression
    transforms:
        poly:
            degree: 5

### SGD
# Avoiding until I understand it better
# sgd:
#     notes:
#         - very sensitive to scaling. Not sensitive to PCA
#     class: SGDRegressor
#     transforms:
#         scaler: standard

### Support Vector Machines
svm:
    notes:
        - Sensitive to scaling, not to PCA
    class: SVR
    transforms:
        scaler: standard

svm_poly:
    class: SVR
    args:
        kernel: poly
    transforms:
        scaler: standard


### Multilayer Perceptron
mlp:
    class: MLPRegressor
    transforms:
        scaler: standard
        pca: True

mlp_log:
    class: MLPRegressor
    args: 
        activation: logistic
    transforms:
        scaler: standard
        pca: True

# Maybe sklearn.grid_search would be a better way of doing this?
mlp_20_20:
    class: MLPRegressor
    args: 
        hidden_layer_sizes: [20,20,]
    transforms:
        scaler: standard
        pca: True

mlp_10_10_10:
    class: MLPRegressor
    args: 
        hidden_layer_sizes: [10,10,10,]
    transforms:
        scaler: standard
        pca: True


### K-nearest neighbours
knn:
    notes:
        - Not sensitive to scaling or PCA
    class: KNeighborsRegressor

knn_1k:
    notes:
        - Not sensitive to scaling or PCA
    class: KNeighborsRegressor
    args:
        n_neighbors: 1000

### Decision Trees
tree:
    class: DecisionTreeRegressor
    transforms:
        scaler: standard
        pca: True

randomforest:
    class: RandomForest

extratrees:
    notes:
        - actually a forest
    class: ExtraTreesRegressor

### Clustered regression
km12_lin:
    notes:
        - insensitive to scaling or PCA
    clusterregression:
        class: KMeans
        args:
            n_clusters: 12
    class: LinearRegression
    longname: Linear regression

### Lagged linear regression
lin_lag1: 
    notes: need to make a proper wrapper for this.
    class: LinearRegression
    lag:
        periods: 1

### Markov lagging
markov1:
    notes: "TODO: need a wrapper that handles the running as well as the fitting.
        - use one timestep's output as an input for the next timestep"
    class: LinearRegression
    markov:
        periods: 1

