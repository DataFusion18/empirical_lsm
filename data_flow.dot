digraph data_flow {

    plots -> summary_data;
    plots -> metrics [style=dashed];

    metrics -> obs_flux_test;
    metrics -> model_predictions;
    summary_data -> model_predictions;

    model_predictions -> fitted_model;
    model_predictions -> obs_met_test;

    fitted_model -> model;
    fitted_model -> obs_flux_train;
    fitted_model -> obs_met_train;

    model -> structure;
    model -> parameters;
    parameters -> site_data;
    parameters -> literature;
    parameters -> structure;
    structure -> "?";

    // obs_flux_test -> obs_flux_data;
    // obs_met_test -> obs_met_data;
    // obs_flux_train -> obs_flux_data;
    // obs_met_train -> obs_met_data;

    obs_flux_test -> tt_selection;
    obs_met_test -> tt_selection;
    obs_flux_train -> tt_selection;
    obs_met_train -> tt_selection;

    tt_selection -> obs_met_data;
    tt_selection -> obs_flux_data;

    site_data -> gridded_data;

    CACHE -> model_predictions
    CACHE -> fitted_model
    CACHE -> metrics

    plots;
    metrics;
    summary_data      [label="summary data"];
    model_predictions [label="model predictions"];
    fitted_model      [label="fitted model"];
    model;
    structure;
    literature        [label=literature, shape=folder];
    parameters;
    site_data         [label="site data"];
    gridded_data      [label="gridded data", shape=folder];
    obs_flux_data     [label="obs flux data", shape=folder];
    obs_flux_test     [label="obs flux test set", shape=note];
    obs_flux_train    [label="obs flux train set", shape=note];
    obs_met_data      [label="obs met data", shape=folder];
    obs_met_test      [label="obs met test set", shape=note];
    obs_met_train     [label="obs met train set", shape=note];
    tt_selection      [label="train/test\nselection process"];
}
